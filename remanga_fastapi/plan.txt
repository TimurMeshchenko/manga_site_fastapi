В catalog к кнопке привязать bookmarks

в bookmarks script в js файл

для websoket response добавить type: bookmark

для ws.onmessage если не response.type != bookmark return

title router context создавать как словарь

websockets_csrf_token через generate_csrf_token

title websocket в utils на методы

-------------------------------------------

оценки тайтла(fetch), 
коменты(broadcast только для соеденений с текущим тайтлом)
тоже самый broadcast, как с пользователем, только для соеденений одного тайтла 
добавить к session еще title_id
оценка коментов(fetch)

-------------------------------------------

Поиск, смена авы (фильтр только картинки fetch), пароля, 
infinity scroll (fetch) CSRF

-------------------------------------------

redis + rabbitmq отправка email с использованием smtplib

-------------------------------------------

router catalog в redis кэширует 60 сек
Проверить sleep у router.
Что если будет запрос с новыми query params, обновит кэш?
Проверить через redis cli значения переменной.

Если новый то titles = db.query(Title) в get_titles() и его в кэш
при вызове get_titles брать из кэша, проверить с sleep

-------------------------------------------

все методы результат которых нужен не сейчас и не обращаются к бд в async
везде подсказки, что возвращает (в router response_model)
тесты, gitflow

-------------------------------------------

Создать .env

docker fastapi(gunicorn, .env) + nginx upstream, postgresql redis, rabbitmq
В nginx /static /media
proxy на :8000

-------------------------------------------

Добавить функционал из fastapi в django.

Django Channels WebSokets для закладкок, комент post
отправка email с redis celery

дописать к django docker redis celery nginx
В nginx /static /media, proxy на :8000

-------------------------------------------

Записать базовые команды postgresql 
Повторять команды postgresql

-------------------------------------------

написать еще fastapi, django под mongodb

-------------------------------------------

asyncio парсер

-------------------------------------------

Асинхронный django uvicorn

django docker через gunicorn

-------------------------------------------

django github actions добавить тест парсера

-------------------------------------------

Дописать тесты для parser бд

-------------------------------------------

QA Automation Selenium, Bash, Web-UI, API

-------------------------------------------

Пароль у акков fsafsafzcx
cd .\remanga_fastapi\src\
python -m uvicorn main:app --reload

python -m alembic revision --autogenerate -m "init"
python -m alembic upgrade head
